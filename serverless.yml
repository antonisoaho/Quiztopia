---
org: intro
service: Quiztopia
provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    USERS_TABLE: ${env:USERS_TABLE}
    QUIZ_TABLE: ${env:QUIZ_TABLE}
    LEADERBOARD_TABLE: ${env:LEADERBOARD_TABLE}
    JWT_KEY: ${env:JWT_KEY}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:USERS_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:QUIZ_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:QUIZ_TABLE}/index/*
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:LEADERBOARD_TABLE}
functions:
  RegisterAccount:
    handler: functions/Users/Register/index.handler
    events:
      - httpApi:
          path: /auth/signup
          method: post
  LoginAccount:
    handler: functions/Users/Login/index.handler
    events:
      - httpApi:
          path: /auth/login
          method: post
  AddQuiz:
    handler: functions/Quiz/AddQuiz/index.handler
    events:
      - httpApi:
          path: /quiz
          method: post
  GetAllQuiz:
    handler: functions/Quiz/GetAll/index.handler
    events:
      - httpApi:
          path: /quiz
          method: get
  GetQuiz:
    handler: functions/Quiz/Get/index.handler
    events:
      - httpApi:
          path: /quiz/{username}/{id}
          method: get
  DeleteQuiz:
    handler: functions/Quiz/Delete/index.handler
    events:
      - httpApi:
          path: /quiz/{id}
          method: delete
  AddQuestion:
    handler: functions/Quiz/AddQuestion/index.handler
    events:
      - httpApi:
          path: /quiz/{id}/questions
          method: post
  AddLeaderboardEntity:
    handler: functions/Leaderboard/Add/index.handler
    events:
      - httpApi:
          path: /leaderboard/{id}
          method: post
  GetLeaderboardHiscores:
    handler: functions/Leaderboard/Get/index.handler
    events:
      - httpApi:
          path: /leaderboard/{id}
          method: get
resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Quiztopia_Users
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    QuizTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Quiztopia_Quiz
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: quizId
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: quizId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: typeIndex
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - username
                - quizId
        BillingMode: PAY_PER_REQUEST
    LeaderboardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Quiztopia_Leaderboard
        AttributeDefinitions:
          - AttributeName: quizId
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: quizId
            KeyType: HASH
          - AttributeName: username
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
